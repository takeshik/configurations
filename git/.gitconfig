[core]
    excludesfile = ~/.gitignore

[advice]
    pushUpdateRejected = false
    statusHints = false
    detachedHead = false

[branch]
    autoSetupRebase = always

[diff]
    renames = copies
    algorithm = histogram
    mnemonicprefix = true
    submodule = log
    compactionHeuristic = true

[fetch]
    output = compact
    prune = true

[grep]
    lineNumber = true

[log]
    date = format:%y-%m-%d %H:%M:%S
    follow = true

[pretty]
    simple = %C(yellow)%h %C(cyan)%ad %C(blue bold)%an%C(red bold)%d %C(white)%s
    simple-long  = %C(yellow)%H %C(red bold)%d%n%C(reset)Author: %C(cyan)%ad %C(blue bold)%an%C(reset)%C(blue) <%ae>%n%C(reset)Commit: %C(cyan)%cd %C(blue bold)%cn%C(reset)%C(blue) <%ce>%n%C(white bold)%s%n%C(reset)%w(0,4,4)%b
    simple-reflog = %C(yellow)%h %C(cyan)%gd %C(blue bold)%gn%C(red)%d %C(white)%gs
    simple-reflog-long = %C(yellow)%H %C(red bold)%d%n%C(reset)Reflog: %C(cyan)%gd %C(blue bold)%gn%C(reset)%C(blue) <%ge>%n%C(white bold)%s%n%C(reset)%w(0,4,4)%b
    simple-stash = %C(yellow)%h %C(cyan)%ad%C(red bold)%d %C(white)%s
    simple-stash-long = %C(yellow)%H%C(reset): %C(cyan)%ad%C(reset) -> %C(cyan)%cd%C(red bold)%d%n%C(white bold)%s%n%C(reset)%w(0,4,4)%b

[pull]
    rebase = preserve

[push]
    default = simple
    followTags = true
    recurseSubmodules = on-demand

[rebase]
    autosquash = true
    autostash = true
    missingCommitsCheck = warn
    instructionFormat = (%ar) %an <%ae> %s

[status]
    short = true
    branch = true

[submodule]
    fetchJobs = 0

[tag]
    sort = -v:refname

[versionsort]
    prereleaseSuffix = -alpha
    prereleaseSuffix = -beta
    prereleaseSuffix = -pre
    prereleaseSuffix = -rc

[alias]
    cloner = clone -v --recursive
    st = status
    br = branch
    bl = branch -vv --list
    br = branch -avv --list
    sb = show-branch
    rr = remote
    rrl = remote -v
    rro = remote show origin
    a = add
    ai = add --interactive
    aa = add -Av
    ci = commit
    ca = commit -a
    cam = commit --amend
    cs = commit -a -m 'squash! stub'
    co = checkout
    fe = fetch --all --tags
    ff = "!f(){ git fe && git update-ref refs/heads/${1:-'master'} refs/remotes/origin/${1:-'master'};};f"
    re = rebase --preserve-merges
    ri = rebase --preserve-merges -i
    up = pull --all --autostash --stat
    upm = !git fe && git re --stat origin/master && git sup
    pu = push --porcelain origin
    sup = submodule update --recursive
    upu = !git up && git pu
    l = log --format=simple
    lt = log --format=simple --all --graph
    ll = log --format=simple-long
    llt = log --format=simple-long --all --graph
    wc = log --format=simple-long --stat --no-merges
    wct = log --format=simple-long --stat --no-merges --all --graph
    rl = reflog --format=simple-reflog
    rwc = reflog --stat --format=simple-reflog-long
    d = diff
    dm = diff master
    dw = diff --color-words
    ds = diff --staged
    d1 = diff HEAD~
    d2 = diff HEAD~~
    d3 = diff HEAD~~~
    d4 = diff HEAD~~~~
    d5 = diff HEAD~~~~~
    d6 = diff HEAD~~~~~~
    d7 = diff HEAD~~~~~~~
    d8 = diff HEAD~~~~~~~~
    d9 = diff HEAD~~~~~~~~~
    g = grep
    gi = grep --ignore-case
    desc = describe --always --dirty
    r1 = reset HEAD~1
    r2 = reset HEAD~2
    r3 = reset HEAD~3
    r4 = reset HEAD~4
    r5 = reset HEAD~5
    r6 = reset HEAD~6
    r7 = reset HEAD~7
    r8 = reset HEAD~8
    r9 = reset HEAD~9
    r-a = rebase --abort
    r-c = rebase --continue
    r-s = rebase --skip
    mm = merge origin/master
    m-a = merge --abort
    all-reset = !git clean -df && git reset --hard
    all-clean = !git clean -dfx && git reset --hard
    s = show
    sl = stash list --format=simple-stash
    swc = stash list --stat --format=simple-stash-long
    spop = stash pop
    sdrop = stash drop
    co-trivials = checkout-trivials
    dby = diff-trivials
    lby = log-by
    llby = log-long-by
    stof = status-of
    wcby = whatchanged-by

[url "https://github.com/"]
    pushinsteadof = "git://github.com/"
    pushinsteadof = "git@github.com:"

[tar "tar.xz"]
    command = xz -c

[tar "txz"]
    command = xz -c

[include]
    path = .gitconfig.local
