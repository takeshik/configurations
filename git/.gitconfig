[core]
    excludesfile = ~/.global.gitignore

[advice]
    pushUpdateRejected = false
    statusHints = false
    detachedHead = false

[branch]
    autoSetupRebase = always

[diff]
    renames = copies
    algorithm = histogram
    mnemonicprefix = true
    submodule = log
    compactionHeuristic = true
    colorMoved = dimmed-zebra

[fetch]
    output = compact
    prune = true

[gc]
    auto = 0

[grep]
    lineNumber = true

[log]
    date = format:%y-%m-%d %H:%M:%S
    follow = true

[pretty]
    simple = %C(auto)%h %C(cyan)%ad %C(blue bold)%<(15)%aN%C(auto)%d %C(white)%s
    simple-long = %C(yellow dim)commit %C(auto)%H%C(auto)%d%n%C(reset)author %C(cyan)%ai %C(blue bold)%an%C(reset)%C(blue) <%ae>%n%C(reset)cmtter %C(cyan)%ci %C(blue bold)%cn%C(reset)%C(blue) <%ce>%n%w(0,4,4)%s%n%w(0,8,8)%b
    simple-reflog = %C(auto)%h %C(cyan)%gd %C(blue bold)%gn%C(auto)%d %C(white)%gs
    simple-reflog-long = %C(yellow dim)commit %C(auto)%H%C(auto)%d%n%C(reset)reflog %C(cyan)%gd %C(blue bold)%gn%C(reset)%C(blue) <%ge>%n%w(0,4,4)%gs%n%w(0,8,8)%b
    simple-stash = %C(auto)%h %C(cyan)%ad%C(auto)%d %C(white)%s
    simple-stash-long = %C(yellow dim)commit %C(auto)%H%C(auto)%d%C(reset)%n%C(cyan)%ai%C(reset) -> %C(cyan)%ci%n%C(white bold)%s%n%C(reset)%w(0,4,4)%b

[pull]
    rebase = preserve

[push]
    default = simple
    followTags = true
    recurseSubmodules = on-demand

[rebase]
    autosquash = true
    autostash = true
    missingCommitsCheck = warn
    instructionFormat = | %ai | %an <%ae> %s

[status]
    short = true
    branch = true

[submodule]
    fetchJobs = 0

[tag]
    sort = -v:refname

[versionsort]
    prereleaseSuffix = -alpha
    prereleaseSuffix = -beta
    prereleaseSuffix = -pre
    prereleaseSuffix = -rc

[alias]
    cb = symbolic-ref --short HEAD
    usb = "!f(){ git rev-parse --abbrev-ref $1@{upstream}; };f"
    cloner = clone -v --recursive
    st = status
    br = branch
    lb = br -vv
    sb = show-branch
    rem = remote show origin
    a = add
    ai = add --interactive
    aa = add -Av
    ci = commit
    cs = commit -a -m 'squash!'
    cam = commit --amend
    can = commit --amend --no-edit
    cp = cherry-pick
    cp-a = cherry-pick --abort
    co = checkout
    fe = fetch --all --tags
    re = rebase --rebase-merges
    ri = rebase --rebase-merges -i
    up = pull --all --autostash --stat
    rem = rebase origin/master
    pu = push
    put = !git push --porcelain --set-upstream origin `git symbolic-ref --short HEAD`
    sup = submodule update --recursive
    l = log --format=simple
    lg = log --format=simple --graph
    ll = log --format=simple-long
    llg = log --format=simple-long --graph
    wc = log --format=simple-long --stat --no-merges
    wcg = log --format=simple-long --stat --no-merges --graph
    rl = reflog --format=simple-reflog
    rll = reflog --format=simple-reflog-long
    rwc = reflog --format=simple-reflog-long --stat
    d = diff
    dm = diff origin/master
    ds = diff --staged
    dw = diff --color-words
    dws = diff --color-words --staged
    ds = diff --staged
    d1 = diff HEAD~
    d2 = diff HEAD~~
    d3 = diff HEAD~~~
    d4 = diff HEAD~~~~
    d5 = diff HEAD~~~~~
    d6 = diff HEAD~~~~~~
    d7 = diff HEAD~~~~~~~
    d8 = diff HEAD~~~~~~~~
    d9 = diff HEAD~~~~~~~~~
    g = grep
    gi = grep --ignore-case
    desc = describe --always --dirty
    r1 = reset HEAD~1
    r2 = reset HEAD~2
    r3 = reset HEAD~3
    r4 = reset HEAD~4
    r5 = reset HEAD~5
    r6 = reset HEAD~6
    r7 = reset HEAD~7
    r8 = reset HEAD~8
    r9 = reset HEAD~9
    r-a = rebase --abort
    r-c = rebase --continue
    r-s = rebase --skip
    mm = merge origin/master
    m-a = merge --abort
    all-reset = !git clean -df && git reset --hard
    all-clean = !git clean -dfx && git reset --hard
    s = show --format=simple-long
    sl = stash list --format=simple-stash
    swc = stash list --stat --format=simple-stash-long
    spop = stash pop
    sdrop = stash drop
    rz-s = reset --soft
    rz = reset --mixed
    rz-h = reset --hard
    detach = !git checkout $(git rev-parse HEAD)

[tar "tar.xz"]
    command = xz -c

[tar "txz"]
    command = xz -c

[color "branch"]
    plain = normal
    remote = red
    local = normal
    current = green
    upstream = blue
    worktree = cyan # not in doc

[color "diff"]
    context = normal
    meta = bold
    frag = cyan
    old = red
    new = green
    commit = yellow
    whitespace = normal red
    func = cyan dim # misformatted in doc
    oldMoved = magenta bold
    oldMovedAlternative = blue bold
    oldMovedDimmed = dim
    oldMovedAlternativeDimmed = dim italic
    newMoved = cyan bold
    newMovedAlternative = yellow bold
    newMovedDimmed = dim
    newMovedAlternativeDimmed = dim italic
    contextDimmed = dim
    oldDimmed = red dim
    newDimmed = green dim
    contextBold = bold
    oldBold = red bold
    newBold = green bold

[color "decorate"]
    branch = green bold
    remoteBranch = red bold
    tag = yellow bold
    stash = magenta bold
    HEAD = cyan bold
    grafted = blue bold # not in doc

[color "grep"]
    context = normal
    filename = white dim
    function = cyan dim
    lineNumber = white dim
    column = white dim
    matchContext = red
    matchSelected = red bold
    selected =
    separator = dim

[color "interactive"]
    error = red bold
    header = bold
    help = green
    plain = normal # not in doc
    prompt = white ul
    reset = reset # not in doc

[color "remote"]
    hint = yellow
    warning = yellow bold
    success = green
    error = red

[color "status"]
    header = normal
    updated = green
    changed = red
    untracked = red
    nobranch = red
    unmerged = red
    localBranch = green
    remoteBranch = red

[include]
    path = ~/.local/.gitconfig
